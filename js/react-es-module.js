import 'original-react';

const {
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    Children,
    Component,
    Fragment,
    Profiler,
    PureComponent,
    StrictMode,
    Suspense,
    SuspenseList,
    cloneElement,
    createContext,
    createElement,
    createFactory,
    createMutableSource,
    createRef,
    createServerContext,
    forwardRef,
    isValidElement,
    lazy,
    memo,
    startTransition,
    unstable_Cache,
    unstable_DebugTracingMode,
    unstable_LegacyHidden,
    unstable_Offscreen,
    unstable_Scope,
    unstable_TracingMarker,
    unstable_getCacheSignal,
    unstable_getCacheForType,
    unstable_useCacheRefresh,
    useId,
    useCallback,
    useContext,
    useDebugValue,
    useDeferredValue,
    useEffect,
    useImperativeHandle,
    useInsertionEffect,
    useLayoutEffect,
    useMemo,
    useMutableSource,
    useSyncExternalStore,
    useReducer,
    useRef,
    useState,
    useTransition,
    version,
} = React || {};

export {
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    Children,
    Component,
    Fragment,
    Profiler,
    PureComponent,
    StrictMode,
    Suspense,
    SuspenseList,
    cloneElement,
    createContext,
    createElement,
    createFactory,
    createMutableSource,
    createRef,
    createServerContext,
    forwardRef,
    isValidElement,
    lazy,
    memo,
    startTransition,
    unstable_Cache,
    unstable_DebugTracingMode,
    unstable_LegacyHidden,
    unstable_Offscreen,
    unstable_Scope,
    unstable_TracingMarker,
    unstable_getCacheSignal,
    unstable_getCacheForType,
    unstable_useCacheRefresh,
    useId,
    useCallback,
    useContext,
    useDebugValue,
    useDeferredValue,
    useEffect,
    useImperativeHandle,
    useInsertionEffect,
    useLayoutEffect,
    useMemo,
    useMutableSource,
    useSyncExternalStore,
    useReducer,
    useRef,
    useState,
    useTransition,
    version,
};

export default React;
